{
  "name": "Eiffel-remrem-generate",
  "tagline": "eiffel-remrem-generate",
  "body": "REMReM (REST Mailbox for Registered Messages) is a set of tools that can be used to generate validated Eiffel messages and publish them on a RabbitMQ message bus. They can be run as micro services or as stand-alone CLI versions. For more details on the micro services and the REMReM design, see https://github.com/Ericsson/eiffel-remrem \r\n\r\nGenerate takes a partial message in JSON format, validates it and adds mandatory fields before outputting a complete, valid Eiffel message.\r\n\r\n## Compatibility\r\n* JDK 8\r\n* Tomcat 7\r\n\r\n## The releases\r\nBinary is relased via [jitPack](https://jitpack.io/#Ericsson/eiffel-remrem-generate).\r\n\r\n## Installation\r\njava -jar eiffel-remrem-generate-version.war\r\nor deploy it in tomcat\r\n\r\n## Usage CLI (Command Line Interface). \r\nExamples used here are for the next generation of Eiffel events called semantics which is open source.\r\n\r\njava -jar generate.war -h\r\n\r\nYou passed help flag.\r\n\r\nusage: java -jar\r\n\r\n-d,--debug                       enable debug traces\r\n\r\n-f,--content_file <arg>          message content file\r\n\r\n-h,--help                        show help.\r\n\r\n-json,--json_content <arg>       json content\r\n\r\n-mp,--messaging_protocol <arg>   name of messaging protocol to be used,\r\n                                  e.g. eiffel3, semantics, semantics is used if nothing given\r\n\r\n-r,--response_file <arg>         file to store the response in, optional\r\n\r\n-t,--message_type <arg>          message type, mandatory if -f or -json\r\n                                  is given\r\n\r\nThe message must exist in a json file for example EiffelActivityFinishedEvent.json might contain following message:<br>\r\n{\"msgParams\": {\r\n  \"meta\": {\r\n    \"type\": \"EiffelActivityFinishedEvent\",\r\n    \"domainId\": \"example.domain\",\r\n    \"tags\": [\"tag1\", \"tag2\"],\r\n    \"source\": {\r\n      \"host\": \"host\",\r\n      \"name\": \"name\",\r\n      \"uri\": \"http://java.sun.com/j2se/1.3/\",\r\n      \"serializer\": {\r\n        \"groupId\": \"G\",\r\n        \"artifactId\": \"A\",\r\n        \"version\": \"V\"\r\n      }\r\n    }\r\n  }\r\n},\r\n  \"eventParams\": {\r\n    \"data\": {\r\n      \"outcome\": {\r\n        \"conclusion\": \"TIMED_OUT\",\r\n        \"description\": \"Compilation timed out.\"\r\n      },\r\n      \"persistentLogs\": [\r\n        {\r\n          \"name\": \"firstLog\",\r\n          \"uri\": \"http://myHost.com/firstLog\"\r\n        },\r\n        {\r\n          \"name\": \"otherLog\",\r\n          \"uri\": \"isbn:0-486-27557-4\"\r\n        }\r\n      ]\r\n    },\r\n    \"links\": {\r\n      \"activityExecution\": \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee1\",\r\n      \"causes\": [\"cause1\", \"cause2\"],\r\n      \"flowContext\": \"flowContext\"\r\n    }\r\n  }\r\n}\r\n\r\nWith input from the example file shown above and output to a file:\r\n\r\n$ java -jar generate.war -f EiffelActivityFinishedEvent.json -t eiffelactivityfinished.json -r output.json\r\n\r\nGives:\r\n\r\n[\r\n  {\r\n    \"data\": {\r\n      \"outcome\": {\r\n        \"conclusion\": \"TIMED_OUT\",\r\n        \"description\": \"Compilation timed out.\"\r\n      },\r\n      \"persistentLogs\": [\r\n        {\r\n          \"name\": \"firstLog\",\r\n          \"uri\": \"http://myHost.com/firstLog\"\r\n        },\r\n        {\r\n          \"name\": \"otherLog\",\r\n          \"uri\": \"isbn:0-486-27557-4\"\r\n        }\r\n      ]\r\n    },\r\n    \"links\": {\r\n      \"activityExecution\": \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee1\",\r\n      \"flowContext\": \"flowContext\",\r\n      \"causes\": [\r\n        \"cause1\",\r\n        \"cause2\"\r\n      ]\r\n    },\r\n    \"meta\": {\r\n      \"domainId\": \"example.domain\",\r\n      \"id\": \"2075b7d1-83a6-47c8-af1d-1d0f451b1f81\",\r\n      \"type\": \"eiffelactivityfinished\",\r\n      \"version\": \"0.1.0\",\r\n      \"time\": 1473767230905,\r\n      \"tags\": [\r\n        \"tag1\",\r\n        \"tag2\"\r\n      ],\r\n      \"source\": {\r\n        \"host\": \"host\",\r\n        \"name\": \"name\",\r\n        \"uri\": \"http://java.sun.com/j2se/1.3/\",\r\n        \"serializer\": {\r\n          \"groupId\": \"G\",\r\n          \"artifactId\": \"A\",\r\n          \"version\": \"V\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n]\r\n\r\n## Usage REST service. \r\nExamples used here are for the next generation of Eiffel events called semantics which is open source.\r\n\r\nurl: hostname/eiffelsemantics?msgType=<message type>\r\nuse POST method\r\nbody: please follow [eiffel syntax](https://github.com/Ericsson/eiffel/tree/topic-drop1/eiffel-syntax-and-usage) and [eiffel vocabulary](https://github.com/Ericsson/eiffel/tree/topic-drop1/eiffel-vocabulary)\r\n\r\n## Testing\r\nexample:<br>\r\n    $ curl -H \"Content-Type: application/json\" -X POST -d '\r\n  {\"msgParams\": {\r\n  \"meta\": {\r\n    \"type\": \"EiffelActivityFinishedEvent\",\r\n    \"domainId\": \"example.domain\",\r\n    \"tags\": [\"tag1\", \"tag2\"],\r\n    \"source\": {\r\n      \"host\": \"host\",\r\n      \"name\": \"name\",\r\n      \"uri\": \"http://java.sun.com/j2se/1.3/\",\r\n      \"serializer\": {\r\n        \"groupId\": \"G\",\r\n        \"artifactId\": \"A\",\r\n        \"version\": \"V\"\r\n      }\r\n    }\r\n  }\r\n},\r\n  \"eventParams\": {\r\n    \"data\": {\r\n      \"outcome\": {\r\n        \"conclusion\": \"TIMED_OUT\",\r\n        \"description\": \"Compilation timed out.\"\r\n      },\r\n      \"persistentLogs\": [\r\n        {\r\n          \"name\": \"firstLog\",\r\n          \"uri\": \"http://myHost.com/firstLog\"\r\n        },\r\n        {\r\n          \"name\": \"otherLog\",\r\n          \"uri\": \"isbn:0-486-27557-4\"\r\n        }\r\n      ]\r\n    },\r\n    \"links\": {\r\n      \"activityExecution\": \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee1\",\r\n      \"causes\": [\"cause1\", \"cause2\"],\r\n      \"flowContext\": \"flowContext\"\r\n    }\r\n  }\r\n}' http://localhost:8080/eiffelsemantics?msgType=eiffelactivityfinished\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}